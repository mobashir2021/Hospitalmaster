@*@model IEnumerable<HospitalManagementSys.Models.ADDSTOCK>*@
@model PagedList.IPagedList<HospitalManagementSys.Models.ADDSTOCK>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>

@*<p>
    @Html.ActionLink("Create New", "Create")
</p>*@
<div class="form-group">
    <div class="col-md-offset-2 col-md-10">
        <input type="submit" value="Create New Stock" class="btn btn-primary"
               onclick="location.href='@Url.Action("Create", "ADDSTOCKs")'" />
    </div>
</div>
<br />
<table class="table table-striped">
    <tr>
        <th>
            @Html.DisplayName("Item")
        </th>
        <th>
            @Html.DisplayName("Quantity")
        </th>
        <th>
            @Html.DisplayName("Total Amount")
        </th>
        <th>
            @Html.DisplayName("Amount Paid")
        </th>
        <th>
            @Html.DisplayName("Amount Due")
        </th>
        <th>
            @Html.DisplayName("Stock Date")
        </th>
        
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.ITEM.ITEMNAME)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.QUANTITY)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TOTALAMOUNT)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AMOUNTPAID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.BALANCE)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.STOCKDATE)
        </td>
        
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.STOCKID }) |
            @Html.ActionLink("Details", "Details", new { id=item.STOCKID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.STOCKID })
        </td>
    </tr>
}

</table>
<div style="background-color:azure;display:inline-block;border-radius:2px;">
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    @if (Model.HasPreviousPage)
    {
        @Html.ActionLink("   <<", "Index", new { page = 1 })
        @Html.Raw(" ");
        @Html.ActionLink("< Prev", "Index", new { page = Model.PageNumber - 1 })
    }
    else
    {
        @:<<
        @Html.Raw(" ");
        @:< Prev
    }

    @if (Model.HasNextPage)
    {
        @Html.ActionLink("Next >", "Index", new { page = Model.PageNumber + 1 })
        @Html.Raw(" ");
        @Html.ActionLink(">>", "Index", new { page = Model.PageCount })
    }
    else
    {
        @:Next >
        @Html.Raw(" ")
        @:>>
    }
</div>
