@model HospitalManagementSys.Models.Patient

@{
    ViewBag.Title = "Edit";
    if (HospitalManagementSys.Models.RolesData.RolesValue == "admin")
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
    else if (HospitalManagementSys.Models.RolesData.RolesValue == "receiptionist")
    {
        Layout = "~/Views/Shared/_LayoutReceiptionist.cshtml";
    }
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Edit Patient</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.PatientId)

        <div class="row">
            <!-- Text input-->
            <div class="col-md-4">
                @Html.Label("P.Name", htmlAttributes: new { @class = "control-label col-md-4" })

                @Html.EditorFor(model => model.PatientName, new { htmlAttributes = new { @class = "form-control input-md-4" } })
            </div>
            <div class="col-md-4">
                @Html.Label("Email Id", htmlAttributes: new { @class = "control-label col-md-4" })

                @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control input-md-4" } })
            </div>
            <div class="col-md-4">
                @Html.Label("Address", htmlAttributes: new { @class = "control-label col-md-4" })

                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control input-md-4" } })
            </div>
        </div>
        <br />
        <div class="row">


            <div class="col-md-4">
                @Html.Label("Phone No", htmlAttributes: new { @class = "control-label col-md-4" })

                @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control input-md-4" } })
            </div>
            <div class="col-md-4">
                @Html.Label("Mobile No", htmlAttributes: new { @class = "control-label col-md-4" })

                @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control input-md-4" } })
            </div>
            <div class="col-md-4">
                @Html.Label("Sex", htmlAttributes: new { @class = "control-label col-md-4" })

                @Html.DropDownList("Sex", (SelectList)ViewBag.Sex, "Select Gender", new { @class = "form-control" })
            </div>
        </div>
        <br />
        
        <div class="row">
            <!-- Text input-->
            <div class="col-md-4">
                @Html.Label("Age", htmlAttributes: new { @class = "control-label col-md-4" })

                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control input-md-4" } })
            </div>
            <div class="col-md-4">
                @Html.Label("BloodGroup", htmlAttributes: new { @class = "control-label col-md-4" })

                @Html.EditorFor(model => model.BloodGroup, new { htmlAttributes = new { @class = "form-control input-md-4" } })
            </div>
            <div class="col-md-4">
                @Html.Label("Doctor", htmlAttributes: new { @class = "control-label col-md-4" })

                @Html.DropDownList("Doctorid", null, htmlAttributes: new { @class = "form-control input-md-4", id = "Doctorid" })
            </div>
        </div>
        <br />
        <div class="row">
            <!-- Text input-->

            <div class="col-md-4">
                @Html.Label("Case Type", htmlAttributes: new { @class = "control-label col-md-4" })

                @Html.DropDownList("Casetypeid", null, htmlAttributes: new { @class = "form-control input-md-4", id = "Casetypeid" })
            </div>
            <div class="col-md-4">
                @Html.Label("Subcasetype", htmlAttributes: new { @class = "control-label col-md-4" })

                @Html.DropDownList("SubCasetypeid", (SelectList)ViewBag.SubCasetypeid, "Select Subcasetype", new { @class = "form-control" })
            </div>
            <!-- Text input-->
            <div class="col-md-4">
                @Html.Label("Remarks", htmlAttributes: new { @class = "control-label col-md-4" })

                @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control input-md-4" } })
            </div>
        </div>
        <br />
        <div class="row">
            <!-- Text input-->

            <div class="col-md-4">
                @Html.Label("Total", htmlAttributes: new { @class = "control-label col-md-4" })

                @Html.EditorFor(model => model.TotalAmount, new { htmlAttributes = new { @class = "form-control input-md-4" } })
            </div>
            <div class="col-md-4">
                @Html.Label("Discount", htmlAttributes: new { @class = "control-label col-md-4" })

                @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control input-md-4" } })
            </div>
            <div class="col-md-4">
                @Html.Label("Balance", htmlAttributes: new { @class = "control-label col-md-4" })

                @Html.EditorFor(model => model.Balance, new { htmlAttributes = new { @class = "form-control input-md-4" } })
            </div>
            <!-- Text input-->

        </div>
        <br />
        <div class="row">
            <!-- Text input-->

            <div class="col-md-4">
                @Html.Label("Notes", htmlAttributes: new { @class = "control-label col-md-4" })

                @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control input-md-4" } })
            </div>


        </div>
        <br />

        @*<div class="form-group">
            @Html.LabelFor(model => model.PatientName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PatientName, new { htmlAttributes = new { @class = "form-control col-md-8" } })
                @Html.ValidationMessageFor(model => model.PatientName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmailId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control col-md-8" } })
                @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control col-md-8" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control col-md-8" } })
                @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control col-md-8" } })
                @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Sex, new { htmlAttributes = new { @class = "form-control col-md-8" } })
                @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control col-md-8" } })
                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BloodGroup, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BloodGroup, new { htmlAttributes = new { @class = "form-control col-md-8" } })
                @Html.ValidationMessageFor(model => model.BloodGroup, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Doctor Name", "Doctor", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Doctorid", null, htmlAttributes: new { @class = "form-control col-md-8" })
                @Html.ValidationMessageFor(model => model.Doctorid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Case Type", "Case Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Casetypeid", null, htmlAttributes: new { @class = "form-control col-md-8" })
                @Html.ValidationMessageFor(model => model.Casetypeid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Percentage", "Percentage", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Percentage, new { htmlAttributes = new { @class = "form-control col-md-8" } })
                @Html.ValidationMessageFor(model => model.Percentage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CaseDate, new { htmlAttributes = new { @class = "form-control col-md-8" } })
                @Html.ValidationMessageFor(model => model.CaseDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CaseTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CaseTime, new { htmlAttributes = new { @class = "form-control col-md-8" } })
                @Html.ValidationMessageFor(model => model.CaseTime, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
